"""empty message

Revision ID: f392e7b8445a
Revises: 
Create Date: 2021-03-13 20:24:42.216548

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f392e7b8445a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('enterprizes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subdomain')
    )
    op.create_index(op.f('ix_enterprizes_reference'), 'enterprizes', ['reference'], unique=True)
    op.create_table('system_event_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stream_reference', sa.String(length=36), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_event_logs_stream_reference'), 'system_event_logs', ['stream_reference'], unique=False)
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('female', 'male', 'other', name='gender', native_enum=False), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('town', sa.String(), nullable=True),
    sa.Column('zip_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('skills', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=True),
    sa.Column('descriptions', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=True),
    sa.Column('motivation', postgresql.JSONB(astext_type=sa.Text()), server_default='[]', nullable=True),
    sa.Column('availability', sa.Enum('available', 'partial', 'booked', 'not_interested', name='useravailability', native_enum=False), nullable=True),
    sa.Column('legal_status', sa.Enum('parental_leave', 'educational_leave', 'sick_leave', 'retirement', 'other', name='legalstatus', native_enum=False), nullable=True),
    sa.Column('exit_notes', sa.String(), nullable=True),
    sa.Column('enter_date', sa.Date(), nullable=True),
    sa.Column('exit_date', sa.Date(), nullable=True),
    sa.Column('enterprize_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['enterprize_id'], ['enterprizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profiles_enterprize_id'), 'profiles', ['enterprize_id'], unique=False)
    op.create_index(op.f('ix_profiles_reference'), 'profiles', ['reference'], unique=True)
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('starts_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('ends_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_organizer_id'), 'events', ['organizer_id'], unique=False)
    op.create_index(op.f('ix_events_reference'), 'events', ['reference'], unique=True)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_author_id'), 'posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_posts_reference'), 'posts', ['reference'], unique=True)
    op.create_table('qa_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['qa_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qa_posts_author_id'), 'qa_posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_qa_posts_parent_id'), 'qa_posts', ['parent_id'], unique=False)
    op.create_index(op.f('ix_qa_posts_reference'), 'qa_posts', ['reference'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference', sa.String(length=36), nullable=False),
    sa.Column('created', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('activated', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('invited', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('type', sa.Enum('user', 'admin', 'super_admin', name='usertype', native_enum=False), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('password'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_profile_id'), 'users', ['profile_id'], unique=True)
    op.create_index(op.f('ix_users_reference'), 'users', ['reference'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_reference'), table_name='users')
    op.drop_index(op.f('ix_users_profile_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_qa_posts_reference'), table_name='qa_posts')
    op.drop_index(op.f('ix_qa_posts_parent_id'), table_name='qa_posts')
    op.drop_index(op.f('ix_qa_posts_author_id'), table_name='qa_posts')
    op.drop_table('qa_posts')
    op.drop_index(op.f('ix_posts_reference'), table_name='posts')
    op.drop_index(op.f('ix_posts_author_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_events_reference'), table_name='events')
    op.drop_index(op.f('ix_events_organizer_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_profiles_reference'), table_name='profiles')
    op.drop_index(op.f('ix_profiles_enterprize_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_system_event_logs_stream_reference'), table_name='system_event_logs')
    op.drop_table('system_event_logs')
    op.drop_index(op.f('ix_enterprizes_reference'), table_name='enterprizes')
    op.drop_table('enterprizes')
    # ### end Alembic commands ###
