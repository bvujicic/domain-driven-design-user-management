name: Linting and testing

#on: [push, pull_request]
on:
  push:
    branches:
      - staging
      - master
  pull_request:
    branches:
      - '*'

env:
  DEBUG: ${{secrets.DEBUG}}
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  SUPERADMIN_USERNAME: ${{secrets.SUPERADMIN_USERNAME}}
  DATABASE_URI: ${{secrets.DATABASE_URI}}
  GOOGLE_CLOUD_STORAGE_BUCKET_NAME: ""

jobs:
  Linting:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9.1]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install flake8 and mypy
      run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy
    - name: Run flake8 linter
      run: flake8 --config=pyproject.toml saas tests
    - name: Run mypy static analysis
      run: mypy --config-file pyproject.toml saas tests

  Testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.9.1]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}
      - name: Set Poetry config
        run: |
          poetry config virtualenvs.path ~/.virtualenvs
          poetry config virtualenvs.in-project false
      - name: Install Application Dependencies
        run: poetry install
      - name: Run Tests
        run: poetry run pytest --cov .
